{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","email","body","name","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","PostList","App","ReactDOM","render","document","getElementById"],"mappings":"o38IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,IAEtC,OAED,mBACEC,UAAU,qBACVC,KAAI,iBAAYJ,GAFlB,SAIGA,OAIL,qBAAKG,UAAU,oBAAf,SACGF,QChBII,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACxBA,EAASC,OAIN,qBAAKJ,UAAU,cAAf,SACGG,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQU,SAJ9B,mBAAG,UAAQ,oBAAX,8BCJOC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBX,EAAgBW,EAAhBX,MAAOE,EAASS,EAATT,KAEf,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGE,MCHMU,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOH,EAAyBE,EAAzBF,KAAMV,EAAmBY,EAAnBZ,KAAMK,EAAaO,EAAbP,SAE3B,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,IAGH,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGR,UAAU,iBAAb,SACGF,IAGH,cAAC,EAAD,CAAaK,SAAUA,QCnBvBS,EAAQC,EAAgBR,KAAI,SAAAK,GAAI,kCAE/BA,GAF+B,IAGlCF,MAKkBM,EALCJ,EAAKI,OAMnBC,EAAgBC,MAAK,SAAAR,GAAI,OAAIA,EAAKF,KAAOQ,MAL9CX,UAQ4Bc,EARKP,EAAKJ,GASjCY,EAAmBC,QAAO,SAAAvB,GAAO,OAAIA,EAAQqB,SAAWA,QADjE,IAAgCA,EAJVH,KAQf,IAAMM,EAAW,kBACtB,qBAAKpB,UAAU,WAAf,SACGY,EAAMP,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKJ,UCtBbe,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,QCHJsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e0f33df1.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { email, body, name } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  !comments.length\n    ? (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    ) : (\n      <div className=\"CommentList\">\n        {comments.map(comment => (\n          <CommentInfo key={comment.id} comment={comment} />\n        ))}\n      </div>\n    )\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const { title, user, body, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <CommentList comments={comments} />\n    </div>\n  );\n};\n","import './PostList.scss';\nimport postsFromServer from '../../api/posts.json';\nimport commentsFromServer from '../../api/comments.json';\nimport usersFromServer from '../../api/users.json';\nimport { PostInfo } from '../PostInfo';\n\nconst posts = postsFromServer.map(post => (\n  {\n    ...post,\n    user: findUserById(post.userId),\n    comments: filterCommentsByPostId(post.id),\n  }\n));\n\nfunction findUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction filterCommentsByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const PostList = () => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo key={post.id} post={post} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}